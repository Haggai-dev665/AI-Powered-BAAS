{
  "name": "ai-powered-baas",
  "version": "1.0.0",
  "description": "Next-Generation AI-Powered Backend as a Service - Empowering developers to build intelligent applications",
  "main": "src/index.js",
  "scripts": {
    "dev": "nodemon src/index.js",
    "start": "node src/index.js",
    "start:ai": "cd ai-services && python main.py",
    "start:web": "cd frontend && npm start",
    "build": "npm run build:api && npm run build:web",
    "build:api": "babel src -d dist",
    "build:web": "cd frontend && npm run build",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/ --ext .js,.ts",
    "lint:fix": "eslint src/ --ext .js,.ts --fix",
    "format": "prettier --write .",
    "type-check": "tsc --noEmit",
    "docker:build": "docker build -t aibaas-api .",
    "docker:run": "docker run -p 3000:3000 aibaas-api",
    "docker:compose": "docker-compose up -d",
    "docker:compose:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "k8s:deploy": "kubectl apply -f kubernetes/",
    "k8s:delete": "kubectl delete -f kubernetes/",
    "db:migrate": "npx prisma migrate dev",
    "db:generate": "npx prisma generate",
    "db:studio": "npx prisma studio",
    "docs:serve": "docsify serve docs",
    "prepare": "husky install"
  },
  "keywords": [
    "ai",
    "baas",
    "backend-as-a-service",
    "machine-learning",
    "nlp",
    "computer-vision",
    "api",
    "serverless",
    "microservices"
  ],
  "author": "AI BaaS Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/AI-Powered-BAAS.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/AI-Powered-BAAS/issues"
  },
  "homepage": "https://github.com/your-username/AI-Powered-BAAS#readme",
  "dependencies": {
    "@apollo/server": "^4.9.5",
    "@fastify/cors": "^8.4.2",
    "@fastify/jwt": "^7.2.4",
    "@fastify/multipart": "^8.0.0",
    "@fastify/rate-limit": "^8.0.3",
    "@fastify/swagger": "^8.12.0",
    "@fastify/websocket": "^8.3.1",
    "@prisma/client": "^5.6.0",
    "@reduxjs/toolkit": "^1.9.7",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "fastify": "^4.24.3",
    "graphql": "^16.8.1",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "mongoose": "^8.0.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.7",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.3",
    "prisma": "^5.6.0",
    "redis": "^4.6.10",
    "socket.io": "^4.7.4",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.14.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.23.4",
    "@babel/core": "^7.23.5",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-typescript": "^7.23.3",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.9.0",
    "@types/passport": "^1.0.16",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-jwt": "^3.0.13",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.10.7",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.1.0",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.{ts,js}",
      "!src/**/*.d.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  }

}